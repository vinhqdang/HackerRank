plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5973492,0.60310947,0.60857476,0.6157016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5923492,0.59810947,0.60857476,0.6157016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5903492,0.59410947,0.59857476,0.6157016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2)
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.58,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2, ylim = c(0.58,0.64))
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.578,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2, ylim = c(0.57,0.64))
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.578,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2, ylim = c(0.57,0.64))
axis(1, at=1:10, labels=x_labels,las=2)
par(mar=c(12,5,1,1))
y=c(0.578,0.58629717,0.5903492,0.59410947,0.59857476,0.6057016,0.62106816,0.6289228,0.63416795,0.63746294)
x_labels = c("Base feature set","flesch_reading_ease","flesch_kincaid_grade","smog_index","coleman_liau_index","automated_readability_index",
"difficult_words","dale_chall_readability_score","linsear_write_formula","gunning_fog")
plot (y, xaxt = "n",type = "b", xlab = "",ylab="Accuracy",las=2, ylim = c(0.57,0.64))
axis(1, at=seq(1, 10, by=1), labels = FALSE)
text(seq(1, 10, by=1), par("usr")[3] - 0.2, labels = x_labels, srt = 45, pos = 1, xpd = TRUE)
original.parameters<-par()
par(xaxt="n")
text(seq(1, 10, by=1), par("usr")[3] - 0.2, labels = x_labels, srt = 45, pos = 1, xpd = TRUE)
e_l = 841372
0.9628 * e_l
rep(1,10)
x1 = c(rep(1,810073), rep(0, (e_l - rep(1,810073))))
x1 = c(rep(1,810073), rep(0, (e_l - 810073)))
len(x1)
length(x1)
0.962 * e_l
x2 = c(rep(1, 809400), rep (0, e_l -809400))
length(x2)
t.test(x1,x2)
s_l = 549202
0.9256 * s_l
x3 = c(rep(1,508341),rep(0, s_l - 508341))
length(x3)
0.9128 * s_l
x4 = c(rep(1,501312),rep(0, s_l - 501312))
length(x4)
t.test (x3,x4)
89.94-89.6
wl = 103869
0.8994 * 103869
x5 = c(rep(1,93420), rep(0, wl - 93420))
0.896 * wl
x6 = c(rep(1,93067), rep(0, wl - 93067))
t.test (x5.x6)
t.test (x5,x6)
x1 = c(15 , 12,  8 ,  8 ,  7 ,  7 ,  7 ,  6 ,  5,   3)
x2 = c(10  ,25,  17 , 11,  13 , 17  ,20,  13,  9  , 15)
cor(x1,x2)
cor(x1,x2,method = "pearson")
x1 = c(15,12,8,8,7,7,7,6,5,3)
x2 = c(10,25,17,11,13,17,20,13,9,15)
summary (lm (x2 ~ x1))
poisson()
ppois(5, 2.5)
pois(3)
library (stats)
pois(3)
x1 = rep(1,4)
x2 = c(1,1,rep(0,20))
library(TeachingDemos)
z.test(x1,x2)
t.test(x1,x2)
z.test(x1)
z.test(x1,6.8)
library(BSDA)
z.test(z1)
z.test(x1)
z.test(x1,sigma.x = 6.8)
z.test(x1,x2)
z.test(x1,x2,sigma.x = 6.8,sigma.y = 6.8)
setwd("~/workspace/hacker_rank/machine_learning_sprint_sep_2016/hackerrank-challenge-recommendation-dataset")
challenges = read.csv("challenges.csv")
submissions = read.csv("submissions.csv")
count = 0
for (hacker in unique (submissions$hacker_id)) {
res = c()
count = count + 1
print (paste (count, "/", length(unique(submissions$hacker_id))))
for (challenge in unique (submissions[submissions$hacker_id == hacker,]$challenge_id)) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
res = c(res, as.character(submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$challenge_id))
}
domain = challenges[challenges$challenge_id == challenge,]$domain[1]
subdomain = challenges[challenges$challenge_id == challenge,]$subdomain[1]
potential_challenges = challenges[challenges$subdomain == subdomain & challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$subdomain == subdomain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("2")
res = c(res, as.character(challenge))
}
}
}
}
res = unique(res)
res = res[1:10]
# print (res)
print (length(res))
print ("----")
res = c(hacker, res)
write (res, file = "recommendation.csv", sep = ",", append = TRUE)
}
challenges = read.csv("challenges.csv")
submissions = read.csv("submissions.csv")
count = 0
for (hacker in unique (submissions$hacker_id)) {
res = c()
count = count + 1
print (paste (count, "/", length(unique(submissions$hacker_id))))
for (challenge in unique (submissions[submissions$hacker_id == hacker,]$challenge_id)) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
res = c(res, as.character(submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$challenge_id))
}
domain = challenges[challenges$challenge_id == challenge,]$domain[1]
subdomain = challenges[challenges$challenge_id == challenge,]$subdomain[1]
potential_challenges = challenges[challenges$subdomain == subdomain & challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$subdomain == subdomain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("2")
res = c(res, as.character(challenge))
}
}
}
}
res = unique(res)
res = res[1:10]
# print (res)
print (length(res))
print ("----")
res = c(hacker, res)
write (res, file = "recommendation.csv", sep = ",", append = TRUE)
}
challenges = read.csv("challenges.csv")
submissions = read.csv("submissions.csv")
count = 0
for (hacker in unique (submissions$hacker_id)) {
res = c()
count = count + 1
print (paste (count, "/", length(unique(submissions$hacker_id))))
for (challenge in unique (submissions[submissions$hacker_id == hacker,]$challenge_id)) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
res = c(res, as.character(submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$challenge_id))
}
domain = challenges[challenges$challenge_id == challenge,]$domain[1]
subdomain = challenges[challenges$challenge_id == challenge,]$subdomain[1]
potential_challenges = challenges[challenges$subdomain == subdomain & challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$subdomain == subdomain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("2")
res = c(res, as.character(challenge))
}
}
}
}
res = unique(res)
res = res[1:10]
# print (res)
print (length(res))
print ("----")
res = c(as.character(hacker), res)
write (res, file = "recommendation.csv", sep = ",", append = TRUE)
}
challenges = read.csv("challenges.csv")
submissions = read.csv("submissions.csv")
count = 0
for (hacker in unique (submissions$hacker_id)) {
res = c()
count = count + 1
print (paste (count, "/", length(unique(submissions$hacker_id))))
for (challenge in unique (submissions[submissions$hacker_id == hacker,]$challenge_id)) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
res = c(res, as.character(submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$challenge_id))
}
domain = challenges[challenges$challenge_id == challenge,]$domain[1]
subdomain = challenges[challenges$challenge_id == challenge,]$subdomain[1]
potential_challenges = challenges[challenges$subdomain == subdomain & challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$subdomain == subdomain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("2")
res = c(res, as.character(challenge))
}
}
}
}
res = unique(res)
res = res[1:10]
print (res)
print (length(res))
print ("----")
res = c(as.character(hacker), res)
write (res, file = "recommendation.csv", sep = ",", append = TRUE)
}
challenges = read.csv("challenges.csv")
submissions = read.csv("submissions.csv")
count = 0
for (hacker in unique (submissions$hacker_id)) {
res = c()
count = count + 1
print (paste (count, "/", length(unique(submissions$hacker_id))))
for (challenge in unique (submissions[submissions$hacker_id == hacker,]$challenge_id)) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
res = c(res, as.character(submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$challenge_id))
}
domain = challenges[challenges$challenge_id == challenge,]$domain[1]
subdomain = challenges[challenges$challenge_id == challenge,]$subdomain[1]
potential_challenges = challenges[challenges$subdomain == subdomain & challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$subdomain == subdomain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("2")
res = c(res, as.character(challenge))
}
}
}
}
res = unique(res)
res = res[1:10]
res = c(as.character(hacker), res)
write (res, file = "recommendation.csv", sep = "\t", append = TRUE)
print (res)
print (length(res))
print ("----")
}
challenges = read.csv("challenges.csv")
submissions = read.csv("submissions.csv")
count = 0
for (hacker in unique (submissions$hacker_id)) {
res = c()
count = count + 1
print (paste (count, "/", length(unique(submissions$hacker_id))))
for (challenge in unique (submissions[submissions$hacker_id == hacker,]$challenge_id)) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
res = c(res, as.character(submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$challenge_id))
}
domain = challenges[challenges$challenge_id == challenge,]$domain[1]
subdomain = challenges[challenges$challenge_id == challenge,]$subdomain[1]
potential_challenges = challenges[challenges$subdomain == subdomain & challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$subdomain == subdomain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("2")
res = c(res, as.character(challenge))
}
}
}
}
res = unique(res)
res = res[1:10]
res = c(as.character(hacker), res)
# write (res, file = "recommendation.csv", sep = ",", append = TRUE)
write.csv(res, file = "recommendation.csv", sep = ",", append = TRUE)
print (res)
print (length(res))
print ("----")
}
challenges = read.csv("challenges.csv")
submissions = read.csv("submissions.csv")
count = 0
for (hacker in unique (submissions$hacker_id)) {
res = c()
count = count + 1
print (paste (count, "/", length(unique(submissions$hacker_id))))
for (challenge in unique (submissions[submissions$hacker_id == hacker,]$challenge_id)) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
res = c(res, as.character(submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$challenge_id))
}
domain = challenges[challenges$challenge_id == challenge,]$domain[1]
subdomain = challenges[challenges$challenge_id == challenge,]$subdomain[1]
potential_challenges = challenges[challenges$subdomain == subdomain & challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$subdomain == subdomain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("2")
res = c(res, as.character(challenge))
}
}
}
}
res = unique(res)
res = res[1:10]
res = c(as.character(hacker), res)
out = paste(res, collapse = ",")
write (out, file = "recommendation.csv", sep = ",", append = TRUE)
# write.csv(res, file = "recommendation.csv", sep = ",", append = TRUE)
print (out)
print (length(res))
print ("----")
}
challenges = read.csv("challenges.csv")
submissions = read.csv("submissions.csv")
count = 0
for (hacker in unique (submissions$hacker_id)) {
res = c()
count = count + 1
print (paste (count, "/", length(unique(submissions$hacker_id))))
for (challenge in unique (submissions[submissions$hacker_id == hacker,]$challenge_id)) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
res = c(res, as.character(submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$challenge_id))
}
domain = challenges[challenges$challenge_id == challenge,]$domain[1]
subdomain = challenges[challenges$challenge_id == challenge,]$subdomain[1]
potential_challenges = challenges[challenges$subdomain == subdomain & challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$subdomain == subdomain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("1")
res = c(res, as.character(challenge))
}
}
}
if (length(res) < 10) {
potential_challenges = challenges[challenges$domain == domain,]$challenge_id
# print (potential_challenges)
for (challenge in potential_challenges) {
if (!is.element(1, submissions[submissions$hacker_id == hacker & submissions$challenge_id == challenge,]$solved)) {
# print ("2")
res = c(res, as.character(challenge))
}
}
}
}
res = unique(res)
res = res[1:10]
res = c(as.character(hacker), res)
out = paste(res, collapse = ",")
write (out, file = "recommendation.csv", sep = ",", append = TRUE)
# write.csv(res, file = "recommendation.csv", sep = ",", append = TRUE)
# print (out)
print (length(res))
print ("----")
}
